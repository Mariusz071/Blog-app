{"version":3,"sources":["serviceWorker.js","actions/index.js","reducers/reducer_user-key.js","reducers/index.js","reducers/reducer_posts.js","components/main_navbar.js","components/post_new.js","components/post_display.js","components/posts_index.js","components/home.js","components/login_input.js","components/main_container.js","components/footer.js","index.js"],"names":["Boolean","window","location","hostname","match","GET_KEY","FETCH_POSTS","CREATE_POST","FETCH_SINGLE_POST","DELETE_POST","ROOT_URL","API_KEY","console","log","userKeyReducer","key","arguments","length","undefined","action","type","payload","rootReducer","combineReducers","posts","state","_","mapKeys","data","Object","objectSpread","defineProperty","id","omit","form","formReducer","styles","root","flexGrow","grow","AppBar","background","color","Button","outline","Logo","fontFamily","letterSpacing","wordSpacing","&:hover","textDecoration","withStyles","props","classes","react_default","a","createElement","className","AppBar_default","position","style","Toolbar_default","Typography_default","variant","react_router_dom_es","to","Button_default","PostsNew","field","_field$meta","meta","touched","error","concat","label","assign","input","values","_this","this","createPost","history","push","handleSubmit","onSubmit","bind","redux_form_es","name","component","renderField","Component","reduxForm","validate","errors","title","categories","content","connect","callback","request","axios","post","then","PostDisplay","params","fetchSinglePost","e","deletePost","_this2","onClick","onClickDeleteHandler","_ref","ownProps","get","delete","ListItemLink","ListItem_default","button","Link","PostsIndex","fetchPosts","map","ListItem","ListItemText_default","primary","classNames","List_default","disablePadding","Typography_Typography_default","marginBottom","renderPosts","compose","theme","verticalAlign","width","height","backgroundColor","palette","paper","padding","textAlign","margin","&:active:","HomePage","createMuiTheme","yellow","typography","useNextVariants","LoginInput","userName","handleChange","val","target","value","setState","submitHandler","preventDefault","getKey","container","autoComplete","core_styles","TextField_default","required","placeholder","textField","dense","InputProps","InputLabelProps","fullWidth","onChange","size","display","flexWrap","minWidth","borderColor","underline","marginLeft","spacing","unit","marginRight","marginTop","userKey","MainContainer","Fragment","CssBaseline_default","path","list","appBar","top","bottom","toolbar","alignItems","justifyContent","iconButton","IconButton_default","href","navigator","serviceWorker","ready","registration","unregister","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","es","store","reducers","main_navbar","main_container_MainContainer","footer","document","getElementById"],"mappings":"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","file":"static/js/main.9bfed317.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\nexport const GET_KEY = 'get_key';\nexport const FETCH_POSTS = 'fetch_posts';\nexport const CREATE_POST = 'create_post';\nexport const FETCH_SINGLE_POST = 'fetch_single_post';\nexport const DELETE_POST = 'delete_post';\n\nconst ROOT_URL = 'https://reduxblog.herokuapp.com/api/';\nlet API_KEY = `?key=Mariusz071`;\nconsole.log(API_KEY);\n\nexport function getKey(userName, callback) {\n    API_KEY = `?key=${userName}`;\n    const request = axios.get(`${ROOT_URL}/posts${API_KEY}`)\n        .then(() => callback());\n    console.log(API_KEY);\n    return {\n        type: GET_KEY,\n        payload: {\n            request: request,\n            userName: userName,\n            API_KEY: API_KEY\n        }\n    };\n}\n\nexport function fetchPosts() {\n    const request = axios.get(`${ROOT_URL}/posts${API_KEY}`);\n    return {\n      type: FETCH_POSTS,\n        payload: request\n    };\n}\n\nexport function createPost(values, callback) {\n    const request = axios.post(`${ROOT_URL}/posts${API_KEY}`, values)\n        .then (() => callback());\n    return {\n        type: CREATE_POST,\n        payload: request\n    };\n}\n\nexport function fetchSinglePost(id) {\n    const request = axios.get(`${ROOT_URL}/posts/${id}${API_KEY}`);\n\n    return {\n        type: FETCH_SINGLE_POST,\n        payload: request\n    };\n}\n\nexport function deletePost(id, callback) {\n   const request = axios.delete(`${ROOT_URL}/posts/${id}${API_KEY}`)\n       .then(() => callback());\n\n   return {\n       type: DELETE_POST,\n       payload: id\n   }\n}","import { GET_KEY } from \"../actions\";\n\n\nconst userKeyReducer = (key = null, action) => {\n    if (action.type === GET_KEY) {\n        return action.payload;\n    }\n    return key;\n};\n\nexport default userKeyReducer","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport PostsReducer from './reducer_posts';\nimport userKeyReducer from './reducer_user-key';\n\n\n\nconst rootReducer = combineReducers({\n  posts: PostsReducer,\n  form: formReducer,\n    key: userKeyReducer\n});\n\nexport default rootReducer;\n","import { FETCH_POSTS, FETCH_SINGLE_POST, DELETE_POST } from \"../actions\";\nimport _ from 'lodash';\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case FETCH_POSTS:\n            return _.mapKeys(action.payload.data, \"id\");\n\n        case FETCH_SINGLE_POST:\n            const post = action.payload.data;\n            //key interpolation = id is set as a key of the object\n            return { ...state, [action.payload.data.id]: action.payload.data };\n\n        case DELETE_POST:\n            //Checking state object - if it has key of post id remove it and return new object\n            return _.omit(state, action.payload);\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    AppBar: {\n        background: \"rgba(0,0,0,.7)\",\n        color: \"#FCDA02\"\n\n    },\n    Button: {\n        color: \"#FFF\",\n        outline: \"none\",\n    },\n    Logo: {\n        fontFamily: \"Permanent Marker\",\n        letterSpacing: \"2px\",\n        wordSpacing: \"4px\",\n        color: \"#FCDA02\",\n        '&:hover': {\n            textDecoration: \"none\",\n            color: \"inherit\"\n        },\n    }\n};\n\nfunction NavBar(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.root }>\n            <AppBar position=\"absolute\" style={styles.AppBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        <Link className={classes.Logo} to=\"/\">BlogSimple</Link>\n                    </Typography>\n                    <Link to=\"/login\" style={ {textDecoration: \"none\"} }>\n                        <Button style={styles.Button}>Login</Button>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nNavBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavBar);","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createPost} from \"../actions\";\n\nclass PostsNew extends Component {\n    renderField(field) {\n        //work around for input red outline\n        const { meta: { touched, error } } = field;\n        const className = `form-control ${touched && error ? 'is-invalid' : ''}`;\n\n        return (\n            <div className=\"form-group\">\n                <label>{field.label}</label>\n                <input\n                    className={className}\n                    type=\"text\"\n                    {...field.input}\n                />\n                {/*Property auto added to the field object from validate function\n                 meta.touched is fields state when it was selected in and selected out*/}\n                <div className=\"text-danger\">\n                    {touched ? error : ''}\n                </div>\n            </div>\n        )\n    }\n\n    onSubmit(values) {\n        this.props.createPost(values, () => {\n            this.props.history.push('/posts');\n        });\n    }\n\n    render() {\n        //handleSubmit is taken from reduxForm helper\n        const { handleSubmit } = this.props;\n        return (\n            //if form is valid onSubmit function will run\n            <div className=\"main-container\">\n                <form onSubmit={handleSubmit(this.onSubmit.bind(this))} className=\"form-container\">\n                    <Field name=\"title\"  component={this.renderField} label=\"Title\"/>\n                    <Field name=\"categories\"  component={this.renderField} label=\"Categories\"/>\n                    <Field name=\"content\"  component={this.renderField} label=\"Post Content\"/>\n                    <div className=\"button-container\">\n                        <button type=\"submit\" className='btn btn-primary btn-submit'>\n                            Submit your post\n                        </button>\n                        <Link to=\"/posts\" className=\"btn btn-danger btn-cancel\">\n                            Back to your posts\n                        </Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction validate(values) {\n    // values contains object with values from all inputs\n    // { title: 'sometitle', categories: 'somecategories', content: 'somecontent' }\n    const errors = {};\n\n    // Validate inputs from 'values'\n    if(!values.title || values.title.length < 3) {\n        errors.title = 'Enter a valid title! (must be longer than 3 characters)'\n    }\n\n    if(!values.categories || values.categories.length < 3) {\n        errors.categories = 'Enter a valid category! (must be longer than 3 characters)'\n    }\n\n    if(!values.content || values.content.length < 6) {\n        errors.content = 'Enter some content! (at least 6 characters)'\n    }\n\n    // if errors object is empty, form will be submitted\n    // if errors has any properties redux form will be invalid\n    //name property of field component and errors.name in validate function must be exactly the same\n    return errors;\n}\n\nexport default reduxForm({\n    validate,\n    form: 'PostsNewForm'\n})(\n    connect(null, { createPost }) (PostsNew)\n)","import React, { Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchSinglePost, deletePost } from \"../actions\";\n\n\n\nclass PostDisplay extends Component {\n    componentDidMount() {\n        //prop provided by react-router\n        const { id } = this.props.match.params;\n        this.props.fetchSinglePost(id);\n    }\n\n    onClickDeleteHandler(e) {\n        const { id } = this.props.match.params;\n        this.props.deletePost(id, () => {\n            this.props.history.push(\"/posts\");\n        });\n    }\n\n    render() {\n        const { post } = this.props;\n\n        if (!post) {\n            return <div>Loading post...</div>\n        }\n\n        return (\n            <div className=\"main-container\">\n                <div className=\"post-container\">\n                    <div className=\"buttons-container\">\n                        <Link to=\"/posts\" className=\"btn btn-submit\">Back your posts</Link>\n                        <button className=\"btn btn-cancel\"\n                                onClick={e => this.onClickDeleteHandler(e)}>\n                            Delete post\n                        </button>\n                    </div>\n                    <div className=\"content-container\">\n                        <h3 className=\"content-container__title\">{post.title}</h3>\n                        <h6 className=\"content-container__category\">Categories: {post.categories}</h6>\n                        <p className=\"content-container__content\">{post.content}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps({ posts }, ownProps) {\n    return {post: posts[ownProps.match.params.id] };\n}\n\nexport default connect (mapStateToProps, { fetchSinglePost, deletePost }) (PostDisplay);","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from \"../actions\";\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport { compose } from \"recompose\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport classNames from 'classnames';\n\n\nconst styles = theme => ({\n    root: {\n        verticalAlign: 'center',\n        width: '60%',\n        height: '50%',\n        backgroundColor: theme.palette.background.paper,\n        padding: \"2rem 0\"\n    },\n    ListItem: {\n        padding: \"1rem 0\",\n        textAlign: \"center\",\n    },\n    Button: {\n        color: \"#FFF\",\n        backgroundColor: \"#000\",\n        outline: \"none\",\n        margin: \"1rem auto\",\n        '&:hover': {\n            backgroundColor: \"#FCDA02\",\n            color: \"#000\"\n        },\n        '&:active:': {\n            outline: \"none\"\n        },\n    }\n});\n\nfunction ListItemLink(props) {\n    return <ListItem button component={Link} {...props}/>;\n}\n\nclass PostsIndex extends Component {\n    componentDidMount() {\n        //navigating back to home page\n        this.props.fetchPosts();\n    }\n\n    renderPosts() {\n        return _.map(this.props.posts, post => {\n            const { classes } = this.props;\n            return (\n                <ListItemLink to={`/posts/${post.id}`} className={classes.ListItem} >\n                    <ListItemText primary={`${post.title}`}/>\n                </ListItemLink>\n            )\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className=\"main-container\">\n                <div className={classNames(classes.root, 'posts-index-container')}>\n                    <List component=\"posts-index\" disablePadding={ false }>\n                        <Typography variant=\"h4\" color=\"textPrimary\" style={{ marginBottom: \"2rem\"}}>\n                            Current posts\n                        </Typography>\n                        {this.renderPosts()}\n                        <Link to=\"/posts/new\" style={{textDecoration: \"none\"}}>\n                            <Button className={classes.Button}>Add a new post</Button>\n                        </Link>\n                    </List>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { posts: state.posts };\n}\n\nexport default compose(\n    withStyles(styles, { name: 'PostsIndex' }),\n    connect(mapStateToProps, { fetchPosts })\n)(PostsIndex);","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default class HomePage extends Component {\nrender () {\n    return (\n            <Typography variant=\"inherit\" className=\"home__heading\">\n                Welcome to  <span className=\"home__heading-span\">BlogSimple</span> App, feel free to play around after logging in.\n            </Typography>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport { getKey } from \"../actions\";\nimport { compose } from \"recompose\";\n\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport yellow from '@material-ui/core/colors/yellow';\nimport Button from '@material-ui/core/Button';\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: yellow,\n    },\n    typography: { useNextVariants: true },\n});\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        minWidth: \"50%\",\n    },\n    input: {\n        color: \"#FFF\",\n        borderColor: \"#FFF\",\n        underline: \"2px solid #FFF\"\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        minWidth: \"100%\",\n    },\n    dense: {\n        marginTop: 20,\n    },\n    Button: {\n        color: \"#000\",\n        backgroundColor: \"#FFF\",\n        outline: \"none\",\n        margin: \"2rem auto\",\n        '&:hover': {\n            backgroundColor: \"#FCDA02\"\n        },\n        '&:active:': {\n            outline: \"none\"\n        }\n    },\n});\n\nclass LoginInput extends Component {\n    state = {\n        userName: ''\n    };\n\n    handleChange = (e) => {\n        const val = e.target.value;\n        this.setState({\n            userName: val,\n        });\n    };\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        this.props.getKey(this.state.userName, () => {\n            this.props.history.push('/posts')\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return <form className={classNames(classes.container, 'input-container')} autoComplete=\"off\" onSubmit={this.submitHandler} value={this.state.userName}>\n            <MuiThemeProvider theme={theme}>\n              <TextField required\n                         id=\"userKey\"\n                         color=\"primary\"\n                         label=\"Your user name\"\n                         placeholder=\"Enter your unique user name\"\n                         className={classNames(classes.textField, classes.dense)}\n                         InputProps={ {className: classes.input} }\n                         InputLabelProps={ {className: classes.input} }\n                         fullWidth margin=\"normal\"\n                         variant=\"outlined\"\n                         onChange={this.handleChange}\n              />\n             <Button type=\"submit\"\n                     size=\"large\"\n                     variant=\"contained\"\n                     className={classes.Button}\n                     value=\"send\"\n             >\n                 Log in\n             </Button>\n            </MuiThemeProvider>\n          </form>;\n    }\n}\n\nLoginInput.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return { userKey: state.key }\n};\n\n\nexport default compose(\n    withStyles(styles, { name: 'LoginInput' }),\n    connect(mapStateToProps, { getKey })\n)(LoginInput);\n\n\n","import React, { Component } from 'react'\nimport {Route, Switch} from \"react-router-dom\";\nimport PostsNew from \"./post_new\";\nimport PostDisplay from \"./post_display\";\nimport PostsIndex from \"./posts_index\";\nimport HomePage from './home'\nimport LoginInput from './login_input';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nexport default class MainContainer extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <CssBaseline/>\n                <div className=\"home\">\n                    <Switch>\n                        <Route path=\"/posts/new\" component={PostsNew} />\n                        <Route path=\"/posts/:id\" component={PostDisplay} />\n                        <Route path=\"/posts\" component={PostsIndex} />\n                        <Route path=\"/login\" component={LoginInput} />\n                        <Route path =\"/\" component={HomePage} />\n                    </Switch>\n                </div>\n            </React.Fragment>\n\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from \"classnames\";\n\nconst styles = theme => ({\n    list: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        background: \"#FCDA02\",\n    },\n    toolbar: {\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    iconButton: {\n        color: \"#797979\",\n        outline: \"none\",\n\n        '&:hover': {\n            color: \"#444\"\n        }\n    },\n});\n\nfunction BottomAppBar(props) {\n    const { classes } = props;\n    return (\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n            <Toolbar className={classNames(classes.toolbar, \"footer\")}>\n                <div>\n                    <IconButton className={classes.iconButton} href=\"https://github.com/Mariusz071\">\n                            <i className=\"fab fa-github-square\"></i>\n                    </IconButton>\n                    <IconButton className={classes.iconButton}\n                                href=\"https://www.linkedin.com/in/mariusz-siewruk-js-developer/\">\n                        <i className=\"fab fa-linkedin\"></i>\n                    </IconButton>\n                </div>\n                <div>\n                    <Typography variant=\"subtitle2\" color=\"textPrimary\">\n                        Copyright &copy; 2018 Mariusz Siewruk\n                    </Typography>\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nBottomAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(BottomAppBar);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport promise from 'redux-promise';\nimport reducers from './reducers';\n\nimport NavBar from './components/main_navbar';\nimport MainContainer from './components/main_container';\nimport BottomAppBar from './components/footer';\n\nserviceWorker.unregister();\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(reducers)}>\n        <BrowserRouter>\n            <div>\n                <NavBar />\n                    <MainContainer/>\n                <BottomAppBar/>\n            </div>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}